{"version":3,"sources":["assets/Scripts/OptionController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA8C,oCAAY;IAA1D;QAAA,qEAqCC;QAlCG,YAAM,GAAc,EAAE,CAAC;;IAkC3B,CAAC;IAhCG,oCAAS,GAAT;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,sCAAW,GAAX;QACI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,IAAI;YACpB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;YAC3C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAmC;IACnC,6BAA6B;IAC7B,sBAAsB;IACtB,kCAAkC;IAClC,oCAAS,GAAT,UAAU,KAAa,EAAE,MAAe,EAAE,SAAiB,EAAE,OAAe;QACxE,IAAI,YAAY,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACnD,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;QACnC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,EAAE,CAAC;QAC5D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9E,CAAC;IAED,yCAAc,GAAd,UAAe,GAAqB;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EACnC;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC;iBACvB,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACrE;IACL,CAAC;IAjCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACK;IAHN,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAqCpC;IAAD,uBAAC;CArCD,AAqCC,CArC6C,EAAE,CAAC,SAAS,GAqCzD;kBArCoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class OptionController extends cc.Component {\n\n    @property(cc.Node)\n    option: cc.Node[] = [];\n\n    onDisable(): void {\n        this.resetOption();\n    }\n\n    resetOption(): void {\n        this.option.forEach(item => {\n            item.getChildByName(\"selected\").active = false;\n            item.getChildByName(\"tick\").active = false;\n            item.getChildByName(\"x\").active = false;\n        });\n    }\n\n    // index là thứ tự của option [0-2]\n    // target là node chứa script\n    // component là script\n    //handler là function cần thực thi\n    setOption(index: number, target: cc.Node, component: string, handler: string) {\n        var clickHandler = new cc.Component.EventHandler();\n        clickHandler.target = target;\n        clickHandler.component = component;\n        clickHandler.handler = handler;\n        this.option[index].getComponent(cc.Button).clickEvents = [];\n        this.option[index].getComponent(cc.Button).clickEvents.push(clickHandler);\n    }\n\n    setImageOption(img: [cc.SpriteFrame]): void {\n        for (var i = 0; i < img.length; ++i)\n        {\n            this.node.children[i].getChildByName(\"icon\")\n                                .getComponent(cc.Sprite).spriteFrame = img[i];\n        }\n    }\n}\n"]}