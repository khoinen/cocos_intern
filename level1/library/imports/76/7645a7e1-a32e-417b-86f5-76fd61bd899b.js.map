{"version":3,"sources":["assets/Scripts/BundleManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C;IAA2C,iCAAY;IAAvD;QAAA,qEAqDC;QAlDW,aAAO,GAAG,EAAE,CAAC;QACb,cAAQ,GAAG,EAAE,CAAC;QAEd,qBAAe,GAAG,EAAE,CAAC;;IA+CjC,CAAC;sBArDoB,aAAa;IAQhB,yBAAW,GAAzB;QACI,IAAI,eAAa,CAAC,SAAS;YACvB,OAAO,eAAa,CAAC,SAAS,CAAC;aAC9B;YACD,eAAa,CAAC,SAAS,GAAG,IAAI,eAAa,EAAE,CAAC;YAC9C,OAAO,eAAa,CAAC,SAAS,CAAC;SAClC;IACL,CAAC;IAED,QAAQ;IACR,uCAAe,GAAf,UAAgB,IAAY,EAAE,EAAc;QAA5C,iBAkCC;QAlC6B,mBAAA,EAAA,SAAc;QACxC,KAAoB,UAAa,EAAb,KAAA,IAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa,EACjC;YADK,IAAI,OAAO,SAAA;YAEZ,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE;gBACtB,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBACxB,OAAO;aACV;SACJ;QAED,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,MAAM;YACzC,IAAI,CAAC,GAAG,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,MAAM;oBACjC,IAAI,CAAC,GAAG,EAAE;wBACN,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAA;wBACtC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;4BACjC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBAC9B;wBACD,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;wBACvB,OAAO;qBACV;oBAED,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;gBACpB,CAAC,CAAC,CAAC;gBACH,OAAO;aACV;YACD,IAAI,EAAE,EAAE;gBACJ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEnB,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aACjB;iBACI;gBACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACtB;QACL,CAAC,CAAC,CAAA;IACN,CAAC;;IAlDc,uBAAS,GAAG,IAAI,CAAC;IAFf,aAAa;QADjC,OAAO;OACa,aAAa,CAqDjC;IAAD,oBAAC;CArDD,AAqDC,CArD0C,EAAE,CAAC,SAAS,GAqDtD;kBArDoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import Data from \"./Data\";\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class BundleManager extends cc.Component {\n\n    private static _instance = null;\n    private _bundle = [];\n    private _prefabs = [];\n\n    private _lazyLoadBundle = [];\n\n    public static getInstance(): BundleManager {\n        if (BundleManager._instance)\n            return BundleManager._instance;\n        else {\n            BundleManager._instance = new BundleManager();\n            return BundleManager._instance;\n        }\n    }\n\n    // New  \n    getPrefabByName(name: string, cb: any = null): void {\n        for (let _prefab of this._prefabs)\n        {\n            if (_prefab.name == name) {\n                cb && cb(null, _prefab);\n                return;\n            }\n        }\n\n        cc.assetManager.loadBundle(name, (err, bundle) => {\n            if (!err) {\n            bundle.load(name, cc.Prefab, (err, prefab) => {\n                    if (!err) {\n                        console.error(\"Loaded \" + prefab.name)\n                        if (!this._prefabs.includes(prefab)) {\n                            this._prefabs.push(prefab);\n                        }\n                        cb && cb(null, prefab);\n                        return;\n                    }\n\n                    console.log(err)\n                });\n                return;\n            }\n            if (cb) {\n                console.error(err);\n                \n                cb(err, null);\n            }\n            else {\n                console.error(err);\n            }\n        })\n    }\n}\n"]}